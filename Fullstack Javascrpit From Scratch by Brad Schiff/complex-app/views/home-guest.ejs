<%- include('includes/header') %>

<div class="container py-md-5">
  <!-- Here we will enter red rectangle error message -->
  <!-- So this errors is going to be array, even if there are no errors, then it will be an empty array -->
  <!-- In js, every array has a method named forEach(), within those parenthesis we can provide function, anonym function in this case -->
  <!-- And javascript will call this function once for each item in the array, within parenthesis of that function we include param -->
  <!-- And we called it a message in this case, and then we want to output or print a bit of html with that message -->
  <!-- So as it seems we leave the dynamic js mode with each line here, or at least when we gotta put html inbetween -->
  <% errors.forEach(function(message) { %>
    <div class="alert alert-danger text-center">
      <!-- Here we want to include the value of the current item in the array, which we can access from message param -->
      <!-- So we write it like this, with the equal sign to print/output it to the user -->
      <%= message %>
    </div>
  <% }) %> 
  <div class="row align-items-center">
    <div class="col-lg-7 py-3 py-md-5">
      <h1 class="display-3">Remember Writing?</h1>      
      <p class="lead text-muted">Are you sick of short tweets and impersonal &ldquo;shared&rdquo; posts that are reminiscent of the late 90&rsquo;s email forwards? We believe getting back to actually writing is the key to enjoying the internet again.</p>
    </div>
    <div class="col-lg-5 pl-lg-5 pb-3 py-lg-5">
      <!-- To /register the post method from this form will be sent -->
      <!-- From here we go back to routers file and tell our app from there what it should do when it receives post request from here -->
      <form action="/register" method="POST" id="registration-form">
          <!-- We will add regErrors here, lemme write it, I think I will guess it right, okay I forgot about div -->
          <!-- Later on, we will add live, on the fly validation, but it is good that we have setup serverside validation -->
          <!-- Because we could never actually rely or trust browser side validation, because as end user can disable browser side javascript -->
          <!-- So that would disable any browserside checking or validation, so when serverside validation is on, we can rest assured that -->
          <!-- Our rules are enforced serverside no matter what and so we will circle back and add browserside validation just to enhance -->
          <!-- User experience, big picture, we want validation on both sides, the server side for security reasons and browser side for UX -->
          <% regErrors.forEach(function(message) { %>
            <div class="alert alert-danger small">
              <%= message %>
            </div>
          <% }) %> 
          <div class="form-group">
            <label for="username-register" class="text-muted mb-1"><small>Username</small></label>
            <input name="username" id="username-register" class="form-control" type="text" placeholder="Pick a username" autocomplete="off">
          </div>
          
          <div class="form-group">
            <label for="email-register" class="text-muted mb-1"><small>Email</small></label>
            <input name="email" id="email-register" class="form-control" type="text" placeholder="you@example.com" autocomplete="off">
          </div>
          
          <div class="form-group">
            <label for="password-register" class="text-muted mb-1"><small>Password</small></label>
            <input name="password" id="password-register" class="form-control" type="password" placeholder="Create a password">
          </div>
          
          <button type="submit" class="py-3 mt-4 btn btn-lg btn-success btn-block">Sign up for OurApp</button>
          
        </form>
      </div>
    </div>
  </div>
  
<!-- footer begins -->
<!-- We removed footer to reuse it -->
<%- include('includes/footer') %> 